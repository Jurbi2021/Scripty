// src/components/molecules/SidebarItem.module.scss
@use 'sass:color';
@use '../../assets/scss/variables' as vars;
@use '../../assets/scss/mixins' as mixins;

.sidebarItem {
  display: flex;
  align-items: center;
  padding: 0.8rem 1.2rem;
  border-radius: 8px;
  cursor: pointer;
  overflow: hidden;
  width: calc(100% - 1.5rem); // Ajuste para considerar margens do pai (Sidebar.module.scss)
  margin: 0.3rem 0.75rem; // Aumentar um pouco a margem vertical
  box-sizing: border-box;
  color: var(--text-secondary-dark);
  transition: background-color 0.2s ease-out; // Transição para o hover do SCSS

  &:hover:not(.active) { // Efeito de hover apenas para itens não ativos
    background-color: rgba(180, 151, 255, 0.08); // Usar sua cor de ação com alfa bem baixo
    color: var(--text-main-dark); // Texto principal no hover para melhor visibilidade
     .icon {
        color: var(--text-main-dark);
     }
     .label p { // Se Text renderiza <p>
        color: var(--text-main-dark);
     }
  }

  &.active {
    background-color: var(--action-highlight-dark);
    color: #ffffff;
    font-weight: 500;

    .icon {
      color: #ffffff;
    }

    .label p { // Assumindo que o Text atom renderiza um <p>
        color: #ffffff !important;
    }

    [data-theme='light'] & {
      background-color: var(--action-highlight-light);
      color: var(--text-main-dark);

       .icon {
         color: var(--text-main-dark);
       }
       .label p {
           color: var(--text-main-dark) !important;
       }
    }
  }

  &.collapsed {
    justify-content: center;
    padding: 0.8rem 0;

    .iconContainer {
      margin: 0;
    }
  }

  [data-theme='light'] & {
    color: var(--text-secondary-light);

     &:hover:not(.active) {
        background-color: rgba(180, 151, 255, 0.1);
        color: var(--text-main-light);
         .icon {
            color: var(--text-main-light);
         }
         .label p {
            color: var(--text-main-light);
         }
    }
  }
}

.iconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.icon {
  font-size: 1.1rem;
  // color: inherit; // Removido para que o hover e active controlem melhor
  flex-shrink: 0;
}

.label {
  white-space: nowrap;
  overflow: hidden;
  // O Text atom interno controlará a cor e o tamanho da fonte.
  p { // Se o Text atom renderiza um <p>
    margin: 0; // Resetar margem do Text atom
    // A cor será definida pelo Text atom ou pelo estado .active do .sidebarItem
    // O Framer Motion controla opacity, width, marginLeft
  }
}