// src/components/organisms/Header.module.scss
@import '../../App.css'; 

.header {
  display: flex; 
  justify-content: space-between; 
  align-items: center; 
  padding: 0 1.5rem; 
  background-color: var(--bg-container-dark); 
  border-bottom: 1px solid var(--border-color-dark); 
  height: 65px; 
  flex-shrink: 0; 
  width: 100%; 
  box-sizing: border-box; 
  position: relative; 
  z-index: 10; 

  [data-theme='light'] & {
    background-color: var(--bg-container-light);
    border-bottom: 1px solid var(--border-color-light);
  }

  .leftSection {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    min-width: 0; // Para permitir que o título encolha se necessário
    .title {
      font-size: 1.2rem; 
      font-weight: 600; 
      color: var(--text-main-dark); 
      white-space: nowrap; // Evita que o título quebre linha e afete a altura
      overflow: hidden; // Esconde o excesso se for muito grande
      text-overflow: ellipsis; // Adiciona "..." se o título for cortado
      [data-theme='light'] & {
        color: var(--text-main-light);
      }
    }
    .logoPlaceholder { 
        min-width: 1px; 
    }

    .profileSelectorHeader {
      margin-left: 1rem; // Adiciona um espaço após o título
    }
  }

  .rightSection {
    display: flex; 
    align-items: center; 
    gap: 0.75rem; 

    .button {
      padding: 0.5rem 1rem; 
      border: 1px solid var(--border-color-dark); 
      border-radius: 8px; 
      background-color: transparent; 
      color: var(--text-secondary-dark); 
      cursor: pointer; 
      font-size: 0.85rem; 
      font-weight: 500; 
      display: flex;
      align-items: center;
      gap: 0.5rem; // Espaço entre ícone e texto (se houver)

      .buttonIcon {
        font-size: 1rem; 
        flex-shrink: 0; // Evita que o ícone seja esmagado
      }

      &:hover:not(:disabled) { 
        // Efeitos de hover são primariamente do Framer Motion
      }

      &.focusButton {
        // Definir uma largura mínima para acomodar "Desativar Foco"
        // Você pode ajustar este valor medindo a largura do texto "Desativar Foco" com a fonte e padding atuais.
        // Ou usar um truque para que o container do texto tenha uma largura mínima.
        // Por enquanto, vamos focar em um container para o texto.

        &.focusActive {
            background-color: var(--action-highlight-dark);
            color: var(--bg-main-dark); 
            border-color: var(--action-highlight-dark);
             [data-theme='light'] & {
                color: var(--bg-main-light); 
             }
        }
      }
      &.iconButton { 
         padding: 0.6rem;
         border: none;
         background-color: transparent;
         &:hover {
            color: var(--action-highlight-dark); 
            border: none; 
         }
         svg { font-size: 1.2rem; } 
      }

      [data-theme='light'] & {
        border-color: var(--border-color-light);
        color: var(--text-secondary-light);
        // &.iconButton:hover {
        //    color: var(--action-highlight-light);
        // }
      }
    }
  }
}

// Novo container para o texto do botão de foco
.focusButtonTextContainer {
  display: inline-grid; 
  text-align: left;     
  min-width: 90px;      // Mantenha o min-width que você ajustou
  position: relative;
  vertical-align: middle; // Ajuda a alinhar o container com o ícone, se necessário
  height: 1.2em; 
  line-height: 1.2em; // Garantir que o texto dentro fique contido.
  overflow: hidden;   // !!! IMPORTANTE: Esconde o texto enquanto ele se move verticalmente.
}

.focusButtonTextSpan {
  display: inline-block; 
  grid-column: 1; // Para garantir que fiquem sobrepostos no grid
  grid-row: 1;    // Para garantir que fiquem sobrepostos no grid
  white-space: nowrap; 
  width: 100%;
  // O 'overflow: hidden' no pai (.focusButtonTextContainer) vai clipar.
}
// --- NOVOS ESTILOS ADICIONADOS ABAIXO ---

// Estilo para o botão "Gerar Prompt IA"
.aiPromptButton {
  // Herda estilos de .button. Pode adicionar ou sobrescrever aqui.
  // Exemplo: se quiser uma cor de fundo diferente quando não está ativo:
  // background-color: var(--success-dark); // Ou outra cor de destaque
  // color: var(--bg-main-dark);
  // border-color: var(--success-dark);

  // [data-theme='light'] & {
  //   background-color: var(--success-light);
  //   color: var(--bg-main-light);
  //   border-color: var(--success-light);
  // }

  // Se quiser que ele se pareça com o botão de foco (antes de ativo):
  // É só não adicionar estilos específicos aqui, ele herdará de .button.
  // Ou, se quiser que seja mais como um iconButton se não tiver texto:
  // &.iconOnly { // Adicione esta classe no TSX se o botão só tiver ícone
  //   padding: 0.6rem;
  //   border: none;
  //   &:hover {
  //     color: var(--action-highlight-dark);
  //   }
  //   .buttonIcon { // Se o ícone precisar de tamanho diferente
  //     font-size: 1.1rem; // Exemplo
  //   }
  //   [data-theme='light'] & {
  //     &:hover {
  //       color: var(--action-highlight-light);
  //     }
  //   }
  // }
}

// Estilos para o Toast (Notificação)
.toast {
  position: fixed;
  bottom: 20px;
  right: 20px; // Canto inferior direito
  // Para centralizar horizontalmente no fundo:
  // left: 50%;
  // transform: translateX(-50%);
  
  background-color: var(--bg-card-dark);
  color: var(--text-main-dark);
  padding: 1rem 1.5rem; // Espaçamento interno
  border-radius: 8px;   // Bordas arredondadas
  box-shadow: 0 4px 12px rgba(0,0,0,0.2); // Sombra para destaque
  z-index: 2000;        // Z-index alto para ficar sobre outros elementos
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  gap: 1rem;            // Espaço entre a mensagem e o botão de fechar
  // A animação de entrada/saída é controlada pelo Framer Motion no TSX

  [data-theme='light'] & {
    background-color: var(--bg-card-light);
    color: var(--text-main-light);
  }

  // Modificadores para tipo de toast
  &.toastSuccess {
    border-left: 5px solid var(--success-dark); // Uma barra lateral para indicar sucesso
    [data-theme='light'] & {
      border-left-color: var(--success-light);
    }
  }

  &.toastError {
  border-left: 5px solid var(--danger-color-dark);
  [data-theme='light']  
  & { border-left-color: var(--danger-color-light); }
  }
}

.toastClose {
  background: none;
  border: none;
  color: var(--text-secondary-dark);
  font-size: 1.3rem; // Tamanho do 'x'
  line-height: 1;    // Para alinhar bem o 'x'
  padding: 0.2rem 0.4rem;
  margin-left: auto;  // Empurra o botão para a direita
  cursor: pointer;
  border-radius: 4px;

  &:hover {
    color: var(--text-main-dark);
    background-color: rgba(var(--text-main-rgb, 211, 215, 222), 0.1); // Defina --text-main-rgb se não existir
  }
  [data-theme='light'] & {
    color: var(--text-secondary-light);
     &:hover {
      color: var(--text-main-light);
      background-color: rgba(var(--text-main-rgb-light, 51, 51, 51), 0.08); // Defina --text-main-rgb-light
    }
  }
}

  .toastClose:hover{  
    
    background-color: rgba(var(--text-main-rgb-dark), 0.1);
  [data-theme='light'] & { 
  &:hover { background-color: rgba(var(--text-main-rgb-light), 0.08); }}
}
  

// .toastError


