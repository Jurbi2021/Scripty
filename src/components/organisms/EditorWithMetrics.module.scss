// src/components/organisms/EditorWithMetrics.module.scss
@import "../../App.css"; //

.editorLayout {
  display: flex; //
  gap: 1.5rem; // Reduzir um pouco o gap
  height: 100%; //
  padding: 1.5rem; //
  box-sizing: border-box; //
  overflow: hidden; // Para evitar scrollbar duplo na página
}

.mainContentArea {
  flex: 2.5; // Dar um pouco mais de espaço para a área de edição
  display: flex; //
  flex-direction: column; //
  gap: 1rem; //
  min-width: 0; //
  height: 100%; // Ocupar toda a altura disponível
}

.editorTitle {
  font-size: 1.4rem; // Ajuste de tamanho
  font-weight: 600; //
  color: var(--text-main-dark); //
  margin: 0 0 0.25rem 0; // Ajustar margem
  [data-theme='light'] & { color: var(--text-main-light); }
}

.editorSubtitle {
  font-size: 0.9rem; //
  color: var(--text-secondary-dark); //
  margin: 0 0 0.75rem 0; // Ajustar margem
  [data-theme='light'] & { color: var(--text-secondary-light); }
}

.toolbarWrapper { // Novo wrapper
  // padding: 0.75rem 0; //
  // border-bottom: 1px solid var(--border-color-dark); //
  flex-shrink: 0; //
  // overflow: hidden; // Removido para não cortar o carrossel
  margin-bottom: 0.5rem; //
  // [data-theme='light'] & { border-bottom-color: var(--border-color-light); }
}

// Os estilos do carrossel de métricas básicas (.metricsSwiper, .metricSlide, .metricCard)
// foram movidos para EditorToolbar.module.scss.
// Se você mantiver o Swiper diretamente aqui, os estilos originais ainda são válidos.

.editorAreaAdapter { // Classe para adaptar o átomo TextArea
  flex-grow: 1; //
  width: 100%; //
  box-sizing: border-box; //
  // O átomo TextArea já tem seus próprios estilos de padding, border, etc.
  // Esta classe pode ser usada para ajustes de layout específicos do organismo, se necessário.
  min-height: 200px; // Garantir uma altura mínima para a área de texto
}

.advancedMetricsPanel {
  flex: 1.5; // Ajustar proporção
  display: flex; //
  flex-direction: column; //
  gap: 0.75rem; // Reduzir gap interno
  padding: 1.25rem; // Ajustar padding
  background-color: var(--bg-container-dark); //
  border-radius: 12px; // Aumentar border-radius
  border: 1px solid var(--border-color-dark); //
  box-shadow: 0 5px 15px rgba(0,0,0,0.07); // Sombra mais suave
  box-sizing: border-box; //
  min-width: 0; //
  height: 100%; // Ocupar toda a altura disponível
  overflow-y: auto; // Scroll interno se necessário
  scrollbar-width: thin;
  scrollbar-color: var(--action-highlight-dark) transparent;

  &::-webkit-scrollbar { width: 6px; }
  &::-webkit-scrollbar-thumb { background-color: var(--action-highlight-dark); border-radius: 3px; }
  &::-webkit-scrollbar-track { background: transparent; }


  [data-theme='light'] & {
    background-color: var(--bg-container-light);
    border-color: var(--border-color-light);
    box-shadow: 0 5px 15px rgba(0,0,0,0.05);
    scrollbar-color: var(--action-highlight-light) transparent;
    &::-webkit-scrollbar-thumb { background-color: var(--action-highlight-light); }
  }

  .advancedPanelTitle {
    font-size: 1.1rem; // Ajuste de tamanho
    font-weight: 600; //
    color: var(--text-main-dark); //
    margin: 0 0 0.1rem 0; // Ajustar margem
    [data-theme='light'] & { color: var(--text-main-light); }
  }

  .advancedSubtitle {
    font-size: 0.8rem; // Ajuste de tamanho
    color: var(--text-secondary-dark); //
    margin: 0 0 1rem 0; // Ajustar margem
    [data-theme='light'] & { color: var(--text-secondary-light); }
  }
}

.advancedGridContainer {
  display: grid; //
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); // Cards um pouco maiores
  gap: 1rem; //
  flex-grow: 1; //
  min-height: 0; //
}

.advancedGridItem {
  background-color: var(--bg-card-dark); //
  border-radius: 10px; //
  padding: 1rem; //
  border: 1px solid var(--border-color-dark); //
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.06); //
  // Transição gerenciada por Framer Motion
  display: flex; //
  flex-direction: column; //
  min-width: 0; //
  overflow: hidden; //
  // &:hover { // Controlado por Framer Motion
  //   transform: translateY(-2px);
  //   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  // }

  [data-theme='light'] & {
    background-color: var(--bg-card-light);
    border-color: var(--border-color-light);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.04);
  }

  h4, //
  .advancedCardTitle {
    display: block; //
    font-size: 0.75rem; //
    font-weight: 600; // Um pouco mais de peso para o título do card
    color: var(--text-secondary-dark); //
    margin-bottom: 0.6rem; //
    text-transform: uppercase; //
    letter-spacing: 0.6px; //
    flex-shrink: 0; //
    [data-theme='light'] & { color: var(--text-secondary-light); }
  }

  .advancedCardContent {
    color: var(--text-main-dark); //
    font-size: 0.9rem; // Ajuste
    line-height: 1.5; //
    flex-grow: 1; //
    min-height: 0; //
    p { margin: 0.25rem 0; } //

    .metricFeedback {
      font-size: 0.8rem; //
      // color: var(--text-secondary-dark); // Será definido pelas classes de nível
      margin-top: 0.5rem; //
      font-style: normal; // Remover itálico para um look mais limpo
      line-height: 1.4;
    }
    .metricHighlight {
        font-weight: 600;
        color: var(--action-highlight-dark);
        [data-theme='light'] & { color: var(--action-highlight-light); }
    }
    .metricHighlightLarge {
        font-size: 1.1rem;
        font-weight: 600;
        // color: var(--text-main-dark); // Será definido pelo formatSentiment
        // [data-theme='light'] & { color: var(--text-main-light); }
    }
    [data-theme='light'] & { color: var(--text-main-light); }
  }
}

.readabilityCarouselContainer {
  padding: 1rem; //
  overflow: hidden; //
  position: relative; // Para posicionar botões de navegação se necessário

  h4 { margin-bottom: 0.75rem; } //
}

.readabilitySwiper {
  flex-grow: 1; //
  width: 100%; //
  height: auto; // Permitir que o conteúdo defina a altura
  min-height: 180px; // Ajustar min-height
  // position: relative; //
  // margin-bottom: 1rem; // Espaço para paginação, se não for customizada
  padding-bottom: 20px; // Espaço para paginação

  // Estilos para botões de navegação padrão do Swiper (se habilitados)
  :global(.swiper-button-prev), :global(.swiper-button-next) {
    color: var(--action-highlight-dark);
    width: 28px;
    height: 28px;
    background-color: rgba(26, 31, 41, 0.7); // var(--bg-container-dark) com alfa
    border-radius: 50%;
    padding: 5px;
    transition: opacity 0.2s ease;


    &::after {
      font-size: 0.8rem; // Tamanho da seta
      font-weight: bold;
    }
     &:hover {
        background-color: var(--action-highlight-dark);
        color: var(--bg-container-dark);
     }
      [data-theme='light'] & {
        color: var(--action-highlight-light);
        background-color: rgba(255, 255, 255, 0.7); // var(--bg-container-light) com alfa
         &:hover {
            background-color: var(--action-highlight-light);
            color: var(--bg-container-light);
         }
      }
  }
  :global(.swiper-button-disabled) {
    opacity: 0.3;
    cursor: not-allowed;
  }
}

.customPagination { // Estilo para o container da paginação
    position: absolute;
    bottom: 5px; // Posicionar no fundo do card
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    display: flex;
    gap: 6px;

    :global(.swiper-pagination-bullet) {
        width: 8px;
        height: 8px;
        background-color: var(--text-secondary-dark); //
        opacity: 0.4; //
        border-radius: 50%;
        transition: background-color 0.2s ease, opacity 0.2s ease, width 0.2s ease; //
        cursor: pointer;

        [data-theme='light'] & {
             background-color: var(--text-secondary-light);
        }
    }
    :global(.swiper-pagination-bullet-active) {
        background-color: var(--action-highlight-dark); //
        opacity: 1; //
        width: 12px; // Destacar o bullet ativo
        [data-theme='light'] & {
             background-color: var(--action-highlight-light);
        }
    }
}

.readabilitySlide {
  cursor: grab; //
  height: 100%; // Fazer o slide ocupar a altura do Swiper
  display: flex; //
  align-items: center; //
  justify-content: center; //
  &:active { cursor: grabbing; } //
}

.readabilityCard {
  text-align: center; //
  padding: 1rem 0.5rem; // Ajustar padding
  display: flex; //
  flex-direction: column; //
  justify-content: center; //
  height: 100%; //
  width: 100%; //

  .readabilityName {
    display: block; //
    color: var(--text-main-dark); //
    font-size: 0.9rem; // Ajuste
    font-weight: 500;
    margin-bottom: 0.4rem; //
    [data-theme='light'] & { color: var(--text-main-light); }
  }

  .readabilityValue {
    display: block; //
    font-weight: 700; // Mais bold
    font-size: 2rem; // Valor bem destacado
    // color: var(--action-highlight-dark); // Cor será definida pela classe de nível
    margin-bottom: 0.4rem; //
  }

  .readabilityLevel {
      display: block; //
      font-size: 0.8rem; //
      font-weight: 500; //
      // color: var(--text-secondary-dark); // Cor será definida pela classe de nível
      margin-bottom: 0.6rem; //
      text-transform: capitalize;
  }

  .readabilityFeedback {
    display: block; //
    font-size: 0.75rem; //
    color: var(--text-secondary-dark); //
    line-height: 1.4; //
    min-height: 2.8em; //
    white-space: normal; //
    max-width: 90%;
    margin: 0 auto; // Centralizar texto de feedback se for curto
    [data-theme='light'] & { color: var(--text-secondary-light); }
  }
}

.emptyStateAdvancedMetrics {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    height: 100%;
    color: var(--text-secondary-dark);
    padding: 2rem;
    font-size: 0.9rem;
    svg {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        opacity: 0.6;
    }
    [data-theme='light'] & {
        color: var(--text-secondary-light);
    }
}


// Level specific classes (add colors if desired)
.levelMuitoFacil, .levelExcelente { color: var(--success-dark); [data-theme='light'] & { color: var(--success-light); } } //
.levelFacil, .levelBom { color: #a0d911; } //
.levelMedio, .levelRegular { color: #faad14; } //
.levelDificil, .levelRuim { color: #f5222d; } //
.levelNA { color: var(--text-secondary-dark); [data-theme='light'] & { color: var(--text-secondary-light); }}